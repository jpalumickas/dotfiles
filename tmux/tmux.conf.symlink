# Don't lose ENV
set -ga update-environment ' ITERM_PROFILE TMUX_STATUS_LEFT'
set-window-option -g mode-keys vi

set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

## keybindings
unbind C-b
unbind C-a
unbind ,
unbind .
unbind n
unbind p
unbind [
unbind '"'
unbind l
unbind &
unbind "'"

set-option -g prefix C-a # C-a for prefix just like screen

bind-key C-a    last-window

bind-key  +     resize-pane -Z
bind-key  =     resize-pane -Z
bind-key  |     split-window -h
bind-key  \     split-window -h
bind-key  -     split-window -v

# windows and panes
bind-key S      command-prompt -p ssh: "new-window -n %1 'ssh %1'"
bind-key u      select-window -t :1
bind-key W      split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'
bind-key x      kill-pane
bind-key X      kill-window
bind-key q      confirm-before kill-session
bind-key Q      confirm-before kill-server
bind-key ,      previous-window # <
bind-key .      next-window     # >
bind-key <      swap-window -t :-
bind-key >      swap-window -t :+
bind-key BSpace switch-client -l

# vi mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'
# Bring back kill line under tmux prefix
bind C-k send-keys 'C-k'

bind-key n      command-prompt 'rename-window "%%"'
bind-key N      command-prompt 'rename-session "%%"'
bind-key Escape copy-mode -u
bind-key Up     copy-mode -u
bind-key r      source-file $HOME/.tmux.conf\; display "The matrix has been reloaded"
bind-key R      refresh-client
bind-key a      send-key C-a
# -r: can be repeated without pressing prefix#     again (500ms after last '-r' action or prefix)
bind-key -r h   select-pane -t :.-
bind-key -r l   select-pane -t :.+

set -g history-limit 10000
set -g focus-events on

## messages
set-option -g quiet
set-option -g message-fg colour0
set-option -g message-bg colour4
set-option -g display-time 5000

## set status bar
set-option -g status-interval 1
set-option -g status-fg colour10
set-option -g status-bg default
set-option -g status-left-fg default
set-option -g status-left-bg default
set-option -g status-right-bg default
bind-key / set-option status

# "I' == current window index
# 'H' == Hostname
# 'F' == current window flag
# 'P' == current pane index
# 'S' == Session name
# 'T' == current window title
# 'W' == current window name
# '#' == a literal "#"
# Where appropriate, special character sequences may be prefixed with a
# number to specify the maximum length, in this line "#10W'.
set -g status-left ""
set-option -g status-right '#[fg=yellow]#S#[fg=default] [#I:#P] /// #(battery -t -p -m default -g default) #[fg=default]%a %d %b %H:%M'

set-option -g status-right-length 100
set-option -g status-left-length 120

## highlight active window
set-window-option -g window-status-current-fg colour4
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-format '[ #I #W ]'

set-window-option -g window-status-bell-fg colour226
set-window-option -g window-status-bell-bg colour23

# renumber windows
set-option -g renumber-windows on

# starts windows at 1 not 0
set-option -g base-index 1

set-option -g   visual-activity   off
# set-option -g   visual-content    off
set-option -g   set-titles        on
set-option -gw  automatic-rename  on
set-option -gw  monitor-activity  off

# Commented out because of lag in VIM
# set-option -gw  monitor-content   off

set-window-option -g pane-base-index 1
set-window-option -g window-status-format ' #I #W '
set-window-option -g window-status-attr dim

set -g mouse on
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind-key -T copy-mode-vi WheelUpPane send -X halfpage-up
bind-key -T copy-mode-vi WheelDownPane send -X halfpage-down

# Toggle mouse on
bind m \
  set -g mouse on \;\
  display 'Mouse: ON'

# Toggle mouse off
bind M \
  set -g mouse off \;\
  display 'Mouse: OFF'



## pane border and colors
set-option -g pane-active-border-fg colour4
set-option -g pane-active-border-bg default

## chooser colors
set-window-option -g    mode-bg   colour5    # selector background
set-window-option -g    mode-fg   black  # selector foreground


## Copy/paste
set-option -g default-command "reattach-to-user-namespace -l zsh; tmux rename-window zsh"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe 'reattach-to-user-namespace pbcopy'

# vim: set ft=tmux:
